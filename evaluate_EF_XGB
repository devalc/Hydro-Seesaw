def evaluate(model, X_test, y_test):
    predictions = model.predict(X_test)
    errors = abs(predictions - y_test)
    mape = 100 * np.mean(errors / y_test)
    accuracy = 100 - mape
    rmse = np.sqrt(mean_squared_error(y_test, predictions))
    r2 = r2_score(y_test, predictions)
    print('Root Mean Squared Error = {:0.4f}.'.format(rmse))
    print('R-squared = {:0.6f}.'.format(r2))
    print('Model Performance')
    print('Average Error: {:0.4f} degrees.'.format(np.mean(errors)))
    print('Accuracy = {:0.2f}%.'.format(accuracy))
    
    return accuracy

best_rf_random = rf_random.best_estimator_
random_accuracy = evaluate(best_rf_random, X_test, y_test)
print(random_accuracy)
print(rf_random.best_estimator_)
print(rf_random.best_params_)
###########

best_xgb_random = xgb_random.best_estimator_
xgb_accuracy = evaluate(best_xgb_random, X_test, y_test)
print(xgb_accuracy)
print(xgb_random.best_estimator_)
print(xgb_random.best_params_)
